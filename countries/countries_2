import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Zakładając, że 'df' jest Twoim DataFrame

# Przygotowanie danych
X = df[['GDP per Capita (in USD)', 'Life Expectancy (Years)', 'Urban Population (%)']]
y = df['Healthcare Expenditure per Capita (USD)']

# Podział danych na zestawy treningowe i testowe
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

# Model regresji
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# Ocena modelu
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Wizualizacja przewidywań vs rzeczywistych wartości
plt.figure(figsize=(12, 6))

# Wykres rozrzutu przewidywań vs rzeczywistych wartości
plt.subplot(1, 2, 1)
plt.scatter(y_test, y_pred, color='blue', edgecolor='k', alpha=0.7)
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--', lw=2)
plt.xlabel('Rzeczywiste wartości')
plt.ylabel('Przewidywane wartości')
plt.title('Przewidywania vs Rzeczywiste Wartości')

# Wizualizacja reszt
residuals = y_test - y_pred
plt.subplot(1, 2, 2)
sns.histplot(residuals, kde=True, bins=20, color='blue')
plt.xlabel('Reszty')
plt.title('Rozkład Reszt')

plt.tight_layout()
plt.show()
